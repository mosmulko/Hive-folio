/**
 * This is a stylesheet for the gallery page- gallery.html
 * It only includes styles for the elements and layout
 * specific to this subpage. It's depandable on styles.css.
 * Starts with mobile portrait view.
 */

/*------------------------------------*\
  #PAGE-LAYOUT
\*------------------------------------*/

/**
 * Page layout has only 3 blocks: masthead is only slightly
 * bigger than primary-nav to allow for some space between the
 * primary-nav and gallery, gallery is as big as it's content
 * and footer.
 * 
 * Note- primary-nav, bottom-info (footer) height and both masthead
 * and gallery margins are set in the style.css.
 */

.layout {
  display: flex;
  flex-direction: column;
}

.layout__masthead {
  height: 4vh;
  flex: 0 0 4vh;
}

.layout__gallery {
  height: max-content;
}

/*------------------------------------*\
  #GALLERY-LAYOUT
\*------------------------------------*/

/**
 * Gallery is organized into 3 sections, first section that gets filled is a 
 * middle section, then left and right get's filled last.
 * Layout: 
 ** mobile-portrait: 
 *** no fillers visible, all sections lined up as single column
 *** each column and cards within fill 100% of the available space
 *
 ** wide screens- mobile-landscape, tablet both orientations: 
 *** two columns are side by side, third section is display as a row wrap to visually
 *** fill the spaces of the 2 columns. Columns width is dependant on the card 
 *** height, as the first card of the middle column (2nd section) needs to
 *** be fully visible in the viewport. 
 *** First and last elements are fillers.
 *
 ** very wide screens - desktop:
 *** each section is displayed as a column, which are organised side by side
 *** with first cards of side columns being fully visible in the viewport.
 *
 * Note: each card's width == 81.362% * height && height == 122.9% * width
 *
 * Note-2: The default css layout is for when all 3 sections
 * have an even number of projects. Other scenarios are controlled by JS in
 * gallery.js file, but styles for these scenarios are in this CSS file.
 */

.gallery {
  display: flex;
  flex-flow: row wrap;
}

.gallery__section {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.gallery__section--first {
  order: 2;
}
.gallery__section--second {
  order: 1;
}
.gallery__section--third {
  order: 3;
}

.gallery__title {
  font-size: 1.5rem;
  fill: white;
  opacity: 0.94;
}

.gallery__filler--bottom-left {
  display: none;
}

/*------------------------------------*\
  #CARD
\*------------------------------------*/

.gallery__card {
  display: flex;
  width: 100%;
}

/*------------------------------------*\
  #CARD-IMAGE
\*------------------------------------*/

/**
 * Uploaded photo is inside the svg image tag and it's clipped to
 * be a hexagon and positioned inside the taller svg polygon.
 */

.card__img {
  width: 100%;
  position: absolute;
  left: 0;
  clip-path: polygon(
    603.23px 223.22px,
    603.23px 518.2px,
    301.62px 690.93px,
    0px 518.2px,
    0px 223.22px,
    301.62px 50.49px,
    603.23px 223.22px
  );
  -webkit-clip-path: polygon(
    603.23px 223.22px,
    603.23px 518.2px,
    301.62px 690.93px,
    0px 518.2px,
    0px 223.22px,
    301.62px 50.49px,
    603.23px 223.22px
  );
}

/*------------------------------------*\
  #CARD-INFO-ON-HOVER
\*------------------------------------*/

/**
 * There is a div positioned directly above the image with a text
 * describing the image. Hexagon shape is achieved using after 
 * and before. It is transparent on load and gets a background 
 * color and visible text on hover.
 *
 * For the svg with image to fill the whole card space, the info
 * needs to be set to position absolute and card to position 
 * relative.
 */

.card {
  position: relative;
  top: 0;
  left: 0;
}

.card__info {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}

.card__info:hover {
  opacity: 1;
}

.card__info--background {
  fill: rgba(6, 70, 252, 0.65);
}

.card__info--text {
  font-size: 2rem;
  fill: white;
}

/*------------------------------------*\
  #MEDIA-QUERIES
\*------------------------------------*/

@media only screen and (min-width: 600px), (orientation: landscape) {
  .layout__masthead {
    height: 15vh;
    flex: 0 0 15vh;
  }

  .gallery__section--first {
    order: 1;
  }
  .gallery__section--second {
    order: 2;
  }
}

@media only screen and (min-width: 600px) and (max-width: 1100px),
  (orientation: landscape) and (max-width: 1100px) {
  /**
 * 2 columns layout:
 * for the 1st card of the middle section to be fully visible in the viewport
 * it has to have a height of 100vh - masthead height. Gallery then needs to
 * have a width of card's height * 81.362% times 2 columns. First 2 columns then
 * have width changed to 50% and last section becomes a row.
 */

  .gallery__section--column {
    width: 50%;
  }

  .gallery__section--fluid {
    flex-flow: row wrap;
    height: auto;
  }

  /**
 * Because last section still has 100% width of gallery all elements inside
 * need to have width 50% of the section to appear like they are part of the
 * 2 columns.
 */

  .section-fluid__item {
    width: 50%;
  }

  /**
 * For visual composition first section needs to be lowered by 20.26% of it's
 * own width (which is 50% of it's parent).
 * Every item on the right in the last section needs to be moved higher by 
 * that 20.26% + a height of the filler which is equal to 36.815% of the section
 * width.
 */

  /**
 * Height: 100% important! Otherwise this card wil grow almost twice higher
 * and card__info won't be lined up with the image
 */

  .section-fluid__item--higher-while-even {
    height: 100%;
    margin-top: calc(calc(calc(37% / 2) + calc(20.26% / 2)) * -1);
  }

  /**
 * Margin-top calculations: height of card (122.9% of 50% width) - calculation
 * from the even scenario
 */

  .section-fluid__item--higher-while-odd {
    height: 100%;
    margin-top: calc(calc(61.45% - 18.41% - 10.13%) * -1);
  }

  /**
 * The margin value comes from dividing filler's height by 2 and adding 20.26
 * of it's width.
 */
  .section-fluid__filler--higher-while-even {
    margin-top: calc(calc(calc(37% / 2) + 20.26%) * -1);
  }

  /**
 * Margin-top = card height - filler height + half of the title
 * height = 30.10% of card's height
 */

  .section-fluid__filler--higher-while-odd {
    height: 30.1%;
    margin-top: calc(calc(61.45% - 37% + 10.13%) * -1);
    margin-left: auto;
  }
}

/**
 * For mobile devices in landscape orientation. This way whole card
 * is visible in the viewport.
 */

@media only screen and (min-aspect-ratio: 8/5) {
  .gallery {
    width: calc(85vh * 0.81362 * 2);
    margin: 0 auto;
  }
}

/*------------------------------------*\
  #WIDE-SCREENS
\*------------------------------------*/

@media only screen and (min-width: 1101px) {
  /**
 * 3 column layout
 */

  .gallery__section {
    width: calc(100% / 3);
  }

  /**
 * 
 */

  .gallery__filler--bottom-left {
    display: block;
  }

  .gallery__filler--bottom-right {
    display: none;
  }
}

/*------------------------------------*\
  #VERY-WIDE-SCREENS
\*------------------------------------*/

@media only screen and (min-width: 1101px) and (min-aspect-ratio: 8/5) {
  .gallery {
    width: 141.5vh;
    margin: 0 auto;
  }
}
